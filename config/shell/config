# GoodTerminal Shell Configuration
# Lightweight shell enhancements for bash and zsh

# Detect which shell we're using
if [ -n "$ZSH_VERSION" ]; then
    CURRENT_SHELL="zsh"
elif [ -n "$BASH_VERSION" ]; then
    CURRENT_SHELL="bash"
else
    CURRENT_SHELL="unknown"
fi

# Enable better history
export HISTSIZE=10000
export HISTFILESIZE=20000
export HISTCONTROL=ignoreboth:erasedups
export HISTIGNORE="ls:cd:cd -:pwd:exit:date:* --help"

# Better directory navigation
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ~='cd ~'
alias -- -='cd -'

# Listing improvements
alias ls='ls --color=auto'
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Grep improvements
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Safety nets
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

# Directory creation
alias mkdir='mkdir -pv'

# Quick navigation helpers
alias h='history'
alias j='jobs -l'
alias which='type -a'
alias path='echo -e ${PATH//:/\\n}'

# System info
alias df='df -h'
alias du='du -h'
alias free='free -h'

# Process management
alias ps='ps auxf'
alias psg='ps aux | grep -v grep | grep -i -e VSZ -e'

# Git aliases (basic ones that don't conflict)
alias g='git'
alias gs='git status'
alias ga='git add'
alias gc='git commit'
alias gp='git push'
alias gl='git pull'
alias gd='git diff'
alias gb='git branch'
alias gco='git checkout'
alias glog='git log --oneline --decorate --graph'
alias lg='lazygit'

# Editor shortcuts
alias v='nvim'
alias vi='nvim'
alias vim='nvim'

# Quick file operations
alias cp='cp -iv'
alias mv='mv -iv'
alias rm='rm -iv'

# Network utilities
alias ports='netstat -tulanp'
alias myip='curl http://ifconfig.me/ip'

# Function for creating and entering directory
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Function for quick backup
bak() {
    cp "$1" "$1.bak"
}

# Function for extracting archives
extract() {
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.bz2)   tar xjf "$1"   ;;
            *.tar.gz)    tar xzf "$1"   ;;
            *.bz2)       bunzip2 "$1"   ;;
            *.rar)       unrar x "$1"   ;;
            *.gz)        gunzip "$1"    ;;
            *.tar)       tar xf "$1"    ;;
            *.tbz2)      tar xjf "$1"   ;;
            *.tgz)       tar xzf "$1"   ;;
            *.zip)       unzip "$1"     ;;
            *.Z)         uncompress "$1";;
            *.7z)        7z x "$1"      ;;
            *)           echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Enable better completion and prompt based on shell
if [ "$CURRENT_SHELL" = "zsh" ]; then
    # For installations without oh-my-zsh, provide basic zsh enhancements
    # If oh-my-zsh is installed, it will override most of these settings
    
    # Basic completion setup
    autoload -Uz compinit && compinit
    zmodload zsh/complist
    
    # Simple completion styling
    zstyle ':completion:*' menu select
    zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
    
    # Basic prompt with git info
    autoload -Uz vcs_info
    precmd() { vcs_info }
    zstyle ':vcs_info:git:*' formats ' (%b)'
    setopt PROMPT_SUBST
    PROMPT='%F{green}%n@%m%f:%F{blue}%~%f%F{red}${vcs_info_msg_0_}%f$ '
    
    # Essential options
    setopt AUTO_CD
    setopt SHARE_HISTORY
    setopt HIST_IGNORE_DUPS
    setopt AUTO_MENU
    setopt COMPLETE_IN_WORD
    
elif [ "$CURRENT_SHELL" = "bash" ]; then
    # Bash specific settings
    
    # Enable programmable completion features
    if ! shopt -oq posix; then
        if [ -f /usr/share/bash-completion/bash_completion ]; then
            . /usr/share/bash-completion/bash_completion
        elif [ -f /etc/bash_completion ]; then
            . /etc/bash_completion
        elif [ -f /usr/local/etc/bash_completion ]; then
            . /usr/local/etc/bash_completion
        fi
    fi
    
    # Enable useful shell options
    shopt -s histappend
    shopt -s checkwinsize
    shopt -s globstar 2> /dev/null
    shopt -s nocaseglob
    shopt -s cdspell
    shopt -s dirspell 2> /dev/null
    
    # Simple prompt with git info
    parse_git_branch() {
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
    }
    
    export PS1="\[\033[32m\]\u@\h\[\033[00m\]:\[\033[34m\]\w\[\033[31m\]\$(parse_git_branch)\[\033[00m\]\$ "
    
    # Bash history search with arrow keys
    bind '"\e[A": history-search-backward'
    bind '"\e[B": history-search-forward'
fi

# oh-my-zsh style utility functions
if [ "$CURRENT_SHELL" = "zsh" ]; then
    # Directory shortcuts
    alias -g ...='../..'
    alias -g ....='../../..'
    alias -g .....='../../../..'
    alias -g ......='../../../../..'
    
    # Global aliases for piping
    alias -g G='| grep'
    alias -g L='| less'
    alias -g H='| head'
    alias -g T='| tail'
    alias -g S='| sort'
    alias -g W='| wc -l'
    alias -g X='| xargs'
    
    # Smart directory navigation
    d() {
        if [[ -n $1 ]]; then
            dirs "$@"
        else
            dirs -v | head -n 10
        fi
    }
    compdef _dirs d
    
    # Quick directory jumping by number from dirs
    alias 1='cd +1'
    alias 2='cd +2'
    alias 3='cd +3'
    alias 4='cd +4'
    alias 5='cd +5'
    alias 6='cd +6'
    alias 7='cd +7'
    alias 8='cd +8'
    alias 9='cd +9'
    
    # Take command - make directory and cd into it
    take() {
        mkdir -p "$@" && cd "${@:$#}"
    }
    
    # Find in current directory
    alias fd='find . -type d -name'
    alias ff='find . -type f -name'
    
    # System info aliases
    alias zshrc='${=EDITOR} ~/.zshrc'
    alias reload='source ~/.zshrc'
fi

# Load local customizations if they exist
if [ -f ~/.shell_local ]; then
    source ~/.shell_local
fi

# Set default editor
export EDITOR='nvim'
export VISUAL='nvim'

# Better ls colors
export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'

# Colored man pages
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[45;93m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'
