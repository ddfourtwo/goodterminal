# GoodTerminal Shell Configuration
# Lightweight shell enhancements for bash and zsh

# Detect which shell we're using
if [ -n "$ZSH_VERSION" ]; then
    CURRENT_SHELL="zsh"
elif [ -n "$BASH_VERSION" ]; then
    CURRENT_SHELL="bash"
else
    CURRENT_SHELL="unknown"
fi

# Enable better history
export HISTSIZE=10000
export HISTFILESIZE=20000
export HISTCONTROL=ignoreboth:erasedups
export HISTIGNORE="ls:cd:cd -:pwd:exit:date:* --help"

# Better directory navigation
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ~='cd ~'
alias -- -='cd -'

# Listing improvements
alias ls='ls --color=auto'
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Grep improvements
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Safety nets
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

# Directory creation
alias mkdir='mkdir -pv'

# Quick navigation helpers
alias h='history'
alias j='jobs -l'
alias which='type -a'
alias path='echo -e ${PATH//:/\\n}'

# System info
alias df='df -h'
alias du='du -h'
alias free='free -h'

# Process management
alias ps='ps auxf'
alias psg='ps aux | grep -v grep | grep -i -e VSZ -e'

# Git aliases (basic ones that don't conflict)
alias g='git'
alias gs='git status'
alias ga='git add'
alias gc='git commit'
alias gp='git push'
alias gl='git pull'
alias gd='git diff'
alias gb='git branch'
alias gco='git checkout'
alias glog='git log --oneline --decorate --graph'
alias lg='lazygit'

# Editor shortcuts
alias v='nvim'
alias vi='nvim'
alias vim='nvim'

# Quick file operations
alias cp='cp -iv'
alias mv='mv -iv'
alias rm='rm -iv'

# Network utilities
alias ports='netstat -tulanp'
alias myip='curl http://ifconfig.me/ip'

# Function for creating and entering directory
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Function for quick backup
bak() {
    cp "$1" "$1.bak"
}

# Function for extracting archives
extract() {
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.bz2)   tar xjf "$1"   ;;
            *.tar.gz)    tar xzf "$1"   ;;
            *.bz2)       bunzip2 "$1"   ;;
            *.rar)       unrar x "$1"   ;;
            *.gz)        gunzip "$1"    ;;
            *.tar)       tar xf "$1"    ;;
            *.tbz2)      tar xjf "$1"   ;;
            *.tgz)       tar xzf "$1"   ;;
            *.zip)       unzip "$1"     ;;
            *.Z)         uncompress "$1";;
            *.7z)        7z x "$1"      ;;
            *)           echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Enable better completion and prompt based on shell
if [ "$CURRENT_SHELL" = "zsh" ]; then
    # ZSH specific settings - oh-my-zsh style configuration
    
    # Enable completion
    autoload -Uz compinit && compinit
    
    # oh-my-zsh style completion settings
    zstyle ':completion:*' menu select
    zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'
    zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
    zstyle ':completion:*' group-name ''
    zstyle ':completion:*:descriptions' format '%B%d%b'
    zstyle ':completion:*:messages' format '%d'
    zstyle ':completion:*:warnings' format 'No matches for: %d'
    zstyle ':completion:*:corrections' format '%B%d (errors: %e)%b'
    
    # Completion for kill command
    zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
    zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
    
    # Path completion
    zstyle ':completion:*' accept-exact '*(N)'
    zstyle ':completion:*' use-cache on
    zstyle ':completion:*' cache-path ~/.zsh/cache
    
    # Fuzzy matching of completions
    zstyle ':completion:*' completer _complete _match _approximate
    zstyle ':completion:*:match:*' original only
    zstyle ':completion:*:approximate:*' max-errors 1 numeric
    
    # Ignore certain extensions
    zstyle ':completion:*:*:*:*:*' ignored-patterns '*.pyc' '*.pyo' '*~' '.git'
    
    # Enable bash completion compatibility
    autoload -Uz bashcompinit && bashcompinit
    
    # Better key bindings
    bindkey '^[[A' history-beginning-search-backward
    bindkey '^[[B' history-beginning-search-forward
    bindkey '^A' beginning-of-line
    bindkey '^E' end-of-line
    bindkey '^K' kill-line
    bindkey '^R' history-incremental-search-backward
    bindkey '^S' history-incremental-search-forward
    bindkey '^P' history-search-backward
    bindkey '^N' history-search-forward  
    bindkey '^Y' yank
    bindkey '\e[3~' delete-char
    bindkey '^?' backward-delete-char
    
    # Word movement (Option+Left/Right on macOS)
    bindkey '\e[1;3D' backward-word
    bindkey '\e[1;3C' forward-word
    bindkey '^[b' backward-word
    bindkey '^[f' forward-word
    
    # Enhanced prompt with git info
    autoload -Uz vcs_info
    autoload -Uz colors && colors
    
    # Git info formatting
    zstyle ':vcs_info:*' enable git
    zstyle ':vcs_info:git:*' check-for-changes true
    zstyle ':vcs_info:git:*' stagedstr '%F{green}+%f'
    zstyle ':vcs_info:git:*' unstagedstr '%F{red}*%f'
    zstyle ':vcs_info:git:*' formats ' %F{yellow}(%b%c%u%f%F{yellow})%f'
    zstyle ':vcs_info:git:*' actionformats ' %F{yellow}(%b|%a%c%u%f%F{yellow})%f'
    
    # Prompt setup
    precmd() { 
        vcs_info
        # Show user@host in green if local, yellow if SSH
        if [[ -n $SSH_CONNECTION ]]; then
            USER_HOST="%F{yellow}%n@%m%f"
        else
            USER_HOST="%F{green}%n@%m%f"
        fi
    }
    
    setopt PROMPT_SUBST
    PROMPT='${USER_HOST}:%F{blue}%~%f${vcs_info_msg_0_}%(?:%F{green}❯%f:%F{red}❯%f) '
    RPROMPT='%F{240}%*%f'  # Show time on right
    
    # Enable auto-cd
    setopt AUTO_CD
    setopt MULTIOS
    setopt CDABLEVARS
    
    # Better history
    setopt SHARE_HISTORY
    setopt HIST_IGNORE_DUPS
    setopt HIST_IGNORE_SPACE
    setopt HIST_VERIFY
    setopt HIST_IGNORE_ALL_DUPS
    setopt HIST_REDUCE_BLANKS
    setopt HIST_SAVE_NO_DUPS
    setopt HIST_EXPIRE_DUPS_FIRST
    setopt APPEND_HISTORY
    setopt EXTENDED_HISTORY
    setopt INC_APPEND_HISTORY
    
    # Better directory navigation
    setopt AUTO_PUSHD
    setopt PUSHD_IGNORE_DUPS
    setopt PUSHD_MINUS
    
    # Better globbing
    setopt EXTENDED_GLOB
    setopt GLOB_DOTS
    setopt NO_CASE_GLOB
    
    # Correction
    setopt CORRECT_ALL
    
    # Completion options
    setopt ALWAYS_TO_END
    setopt AUTO_LIST
    setopt AUTO_MENU
    setopt AUTO_PARAM_KEYS
    setopt AUTO_PARAM_SLASH
    setopt AUTO_REMOVE_SLASH
    setopt COMPLETE_ALIASES
    setopt COMPLETE_IN_WORD
    setopt LIST_AMBIGUOUS
    setopt LIST_PACKED
    setopt MENU_COMPLETE
    
elif [ "$CURRENT_SHELL" = "bash" ]; then
    # Bash specific settings
    
    # Enable programmable completion features
    if ! shopt -oq posix; then
        if [ -f /usr/share/bash-completion/bash_completion ]; then
            . /usr/share/bash-completion/bash_completion
        elif [ -f /etc/bash_completion ]; then
            . /etc/bash_completion
        elif [ -f /usr/local/etc/bash_completion ]; then
            . /usr/local/etc/bash_completion
        fi
    fi
    
    # Enable useful shell options
    shopt -s histappend
    shopt -s checkwinsize
    shopt -s globstar 2> /dev/null
    shopt -s nocaseglob
    shopt -s cdspell
    shopt -s dirspell 2> /dev/null
    
    # Simple prompt with git info
    parse_git_branch() {
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
    }
    
    export PS1="\[\033[32m\]\u@\h\[\033[00m\]:\[\033[34m\]\w\[\033[31m\]\$(parse_git_branch)\[\033[00m\]\$ "
    
    # Bash history search with arrow keys
    bind '"\e[A": history-search-backward'
    bind '"\e[B": history-search-forward'
fi

# oh-my-zsh style utility functions
if [ "$CURRENT_SHELL" = "zsh" ]; then
    # Directory shortcuts
    alias -g ...='../..'
    alias -g ....='../../..'
    alias -g .....='../../../..'
    alias -g ......='../../../../..'
    
    # Global aliases for piping
    alias -g G='| grep'
    alias -g L='| less'
    alias -g H='| head'
    alias -g T='| tail'
    alias -g S='| sort'
    alias -g W='| wc -l'
    alias -g X='| xargs'
    
    # Smart directory navigation
    d() {
        if [[ -n $1 ]]; then
            dirs "$@"
        else
            dirs -v | head -n 10
        fi
    }
    compdef _dirs d
    
    # Quick directory jumping by number from dirs
    alias 1='cd +1'
    alias 2='cd +2'
    alias 3='cd +3'
    alias 4='cd +4'
    alias 5='cd +5'
    alias 6='cd +6'
    alias 7='cd +7'
    alias 8='cd +8'
    alias 9='cd +9'
    
    # Take command - make directory and cd into it
    take() {
        mkdir -p "$@" && cd "${@:$#}"
    }
    
    # Find in current directory
    alias fd='find . -type d -name'
    alias ff='find . -type f -name'
    
    # System info aliases
    alias zshrc='${=EDITOR} ~/.zshrc'
    alias reload='source ~/.zshrc'
fi

# Load local customizations if they exist
if [ -f ~/.shell_local ]; then
    source ~/.shell_local
fi

# Set default editor
export EDITOR='nvim'
export VISUAL='nvim'

# Better ls colors
export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'

# Colored man pages
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[45;93m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'
